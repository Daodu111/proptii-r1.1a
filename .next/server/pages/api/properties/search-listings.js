"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/properties/search-listings";
exports.ids = ["pages/api/properties/search-listings"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fproperties%2Fsearch-listings&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fproperties%2Fsearch-listings.ts&middlewareConfigBase64=e30%3D!":
/*!********************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fproperties%2Fsearch-listings&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fproperties%2Fsearch-listings.ts&middlewareConfigBase64=e30%3D! ***!
  \********************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_properties_search_listings_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/properties/search-listings.ts */ \"(api-node)/./src/pages/api/properties/search-listings.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_properties_search_listings_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_properties_search_listings_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_properties_search_listings_ts__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_properties_search_listings_ts__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/properties/search-listings\",\n        pathname: \"/api/properties/search-listings\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _src_pages_api_properties_search_listings_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGcHJvcGVydGllcyUyRnNlYXJjaC1saXN0aW5ncyZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnNyYyUyRnBhZ2VzJTJGYXBpJTJGcHJvcGVydGllcyUyRnNlYXJjaC1saXN0aW5ncy50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDRTtBQUMxRDtBQUMwRTtBQUMxRTtBQUNBLGlFQUFlLHdFQUFLLENBQUMseUVBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLHlFQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLHlHQUFtQjtBQUNsRDtBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCxxQyIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vc3JjL3BhZ2VzL2FwaS9wcm9wZXJ0aWVzL3NlYXJjaC1saXN0aW5ncy50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCAnZGVmYXVsdCcpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgJ2NvbmZpZycpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvcHJvcGVydGllcy9zZWFyY2gtbGlzdGluZ3NcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9wcm9wZXJ0aWVzL3NlYXJjaC1saXN0aW5nc1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fproperties%2Fsearch-listings&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fproperties%2Fsearch-listings.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./src/pages/api/properties/search-listings.ts":
/*!*****************************************************!*\
  !*** ./src/pages/api/properties/search-listings.ts ***!
  \*****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var cheerio__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cheerio */ \"cheerio\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([cheerio__WEBPACK_IMPORTED_MODULE_0__]);\ncheerio__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst RIGHTMOVE_SEARCH_URL_PATTERN = /^https?:\\/\\/(www\\.)?rightmove\\.co\\.uk\\/(property-for-sale|property-to-rent|properties|find).*$/;\nconst ZOOPLA_SEARCH_URL_PATTERN = /^https?:\\/\\/(www\\.)?zoopla\\.co\\.uk\\/(for-sale|to-rent)\\/.*$/;\nconst OPENRENT_SEARCH_URL_PATTERN = /^https?:\\/\\/(www\\.)?openrent\\.co\\.uk\\/properties-to-rent\\/.*$/;\nconst PARSERS = {\n    rightmove: {\n        selector: '[data-test=\"propertyCard\"]',\n        baseUrl: 'https://www.rightmove.co.uk',\n        extract: ($, element)=>{\n            const $element = $(element);\n            const price = $element.find('[data-test=\"propertyPrice\"]').text().trim();\n            const title = $element.find('[data-test=\"propertyTitle\"]').text().trim();\n            const location = $element.find('[data-test=\"propertySubtitle\"]').text().trim();\n            const image = $element.find('img[data-test=\"propertyImage\"]').attr('src') || '';\n            const propertyUrl = $element.find('a[data-test=\"propertyCard-link\"]').attr('href');\n            if (!price || !title) return null;\n            // Extract specs from the property features\n            const specs = {\n                beds: parseInt($element.find('[data-test=\"propertyBedrooms\"]').text()) || 0,\n                baths: parseInt($element.find('[data-test=\"propertyBathrooms\"]').text()) || 0,\n                area: $element.find('[data-test=\"propertyFloorArea\"]').text().trim() || 'N/A'\n            };\n            return {\n                id: `rm-${Date.now()}-${Math.random()}`,\n                price,\n                title,\n                location,\n                image: image.startsWith('http') ? image : `${PARSERS.rightmove.baseUrl}${image}`,\n                specs,\n                propertyUrl: propertyUrl ? `${PARSERS.rightmove.baseUrl}${propertyUrl}` : undefined\n            };\n        }\n    },\n    zoopla: {\n        selector: '[data-testid=\"regular-listing\"]',\n        baseUrl: 'https://www.zoopla.co.uk',\n        extract: ($, element)=>{\n            const $element = $(element);\n            const price = $element.find('[data-testid=\"listing-price\"]').text().trim();\n            const title = $element.find('[data-testid=\"listing-title\"]').text().trim();\n            const location = $element.find('[data-testid=\"listing-location\"]').text().trim();\n            const image = $element.find('img').first().attr('src') || '';\n            const propertyUrl = $element.find('a').first().attr('href');\n            if (!price || !title) return null;\n            // Extract specs from the listing details\n            const specs = {\n                beds: parseInt($element.find('[data-testid=\"listing-spec-beds\"] span').first().text()) || 0,\n                baths: parseInt($element.find('[data-testid=\"listing-spec-baths\"] span').first().text()) || 0,\n                area: $element.find('[data-testid=\"listing-spec-floorArea\"] span').first().text().trim() || 'N/A'\n            };\n            return {\n                id: `zp-${Date.now()}-${Math.random()}`,\n                price,\n                title,\n                location,\n                image: image.startsWith('http') ? image : `${PARSERS.zoopla.baseUrl}${image}`,\n                specs,\n                propertyUrl: propertyUrl ? `${PARSERS.zoopla.baseUrl}${propertyUrl}` : undefined\n            };\n        }\n    },\n    openrent: {\n        selector: '.property-box',\n        baseUrl: 'https://www.openrent.co.uk',\n        extract: ($, element)=>{\n            const $element = $(element);\n            const titleElement = $element.find('.banda a');\n            const price = $element.find('.price').text().trim().split('per')[0].trim();\n            const title = titleElement.text().trim();\n            const location = $element.find('.location').text().trim();\n            const image = $element.find('.mainImage').attr('src') || '';\n            const propertyUrl = titleElement.attr('href');\n            if (!price || !title) return null;\n            // Extract specs from the description\n            const description = $element.find('.description').text().trim();\n            const bedsMatch = description.match(/(\\d+)\\s*(?:double\\s*)?bed/i);\n            const bathsMatch = description.match(/(\\d+)\\s*bath/i);\n            const specs = {\n                beds: bedsMatch ? parseInt(bedsMatch[1]) : 0,\n                baths: bathsMatch ? parseInt(bathsMatch[1]) : 0,\n                area: 'N/A' // OpenRent typically doesn't show area in search results\n            };\n            return {\n                id: `or-${Date.now()}-${Math.random()}`,\n                price,\n                title,\n                location,\n                image: image.startsWith('http') ? image : `${PARSERS.openrent.baseUrl}${image}`,\n                specs,\n                propertyUrl: propertyUrl ? `${PARSERS.openrent.baseUrl}${propertyUrl}` : undefined\n            };\n        }\n    }\n};\nasync function handler(req, res) {\n    // Enable CORS\n    res.setHeader('Access-Control-Allow-Credentials', 'true');\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Methods', 'GET,OPTIONS,PATCH,DELETE,POST,PUT');\n    res.setHeader('Access-Control-Allow-Headers', 'X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version');\n    if (req.method === 'OPTIONS') {\n        res.status(200).end();\n        return;\n    }\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            message: 'Method not allowed'\n        });\n    }\n    try {\n        const { searchUrl } = req.body;\n        console.log('Received search URL:', searchUrl);\n        if (!searchUrl) {\n            return res.status(400).json({\n                message: 'Search URL is required'\n            });\n        }\n        // Validate URL format\n        try {\n            new URL(searchUrl);\n        } catch (error) {\n            return res.status(400).json({\n                message: 'Invalid URL format'\n            });\n        }\n        // Determine which parser to use\n        let parser;\n        let parserName = '';\n        if (RIGHTMOVE_SEARCH_URL_PATTERN.test(searchUrl)) {\n            parser = PARSERS.rightmove;\n            parserName = 'rightmove';\n        } else if (ZOOPLA_SEARCH_URL_PATTERN.test(searchUrl)) {\n            parser = PARSERS.zoopla;\n            parserName = 'zoopla';\n        } else if (OPENRENT_SEARCH_URL_PATTERN.test(searchUrl)) {\n            parser = PARSERS.openrent;\n            parserName = 'openrent';\n        }\n        if (!parser) {\n            console.log('URL pattern matching results:', {\n                rightmove: RIGHTMOVE_SEARCH_URL_PATTERN.test(searchUrl),\n                zoopla: ZOOPLA_SEARCH_URL_PATTERN.test(searchUrl),\n                openrent: OPENRENT_SEARCH_URL_PATTERN.test(searchUrl)\n            });\n            return res.status(400).json({\n                message: 'Invalid property search URL format. Only Rightmove, Zoopla, and OpenRent URLs are supported.'\n            });\n        }\n        console.log(`Using ${parserName} parser for URL:`, searchUrl);\n        const headers = {\n            'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36',\n            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8',\n            'Accept-Language': 'en-GB,en-US;q=0.9,en;q=0.8',\n            'Accept-Encoding': 'gzip, deflate, br',\n            'Cache-Control': 'no-cache',\n            'Pragma': 'no-cache',\n            'Sec-Ch-Ua': '\"Chromium\";v=\"122\", \"Not(A:Brand\";v=\"24\", \"Google Chrome\";v=\"122\"',\n            'Sec-Ch-Ua-Mobile': '?0',\n            'Sec-Ch-Ua-Platform': '\"macOS\"',\n            'Sec-Fetch-Dest': 'document',\n            'Sec-Fetch-Mode': 'navigate',\n            'Sec-Fetch-Site': 'none',\n            'Sec-Fetch-User': '?1',\n            'Upgrade-Insecure-Requests': '1',\n            'Connection': 'keep-alive'\n        };\n        // Add site-specific headers\n        if (parserName === 'rightmove') {\n            headers['Referer'] = 'https://www.rightmove.co.uk/';\n        } else if (parserName === 'zoopla') {\n            headers['Referer'] = 'https://www.zoopla.co.uk/';\n        } else if (parserName === 'openrent') {\n            headers['Referer'] = 'https://www.openrent.co.uk/';\n        }\n        const response = await fetch(searchUrl, {\n            headers\n        });\n        console.log('Fetch response status:', response.status);\n        console.log('Fetch response headers:', response.headers);\n        if (!response.ok) {\n            if (response.status === 403) {\n                console.error('Access forbidden - possible bot detection');\n                return res.status(403).json({\n                    message: 'Unable to access the property site. This might be due to rate limiting or bot detection.'\n                });\n            }\n            if (response.status === 404) {\n                console.error('Page not found');\n                return res.status(404).json({\n                    message: 'The property listing page could not be found. The URL might be invalid or the listing may have been removed.'\n                });\n            }\n            console.error('Failed to fetch:', response.status, response.statusText);\n            throw new Error(`Failed to fetch search results: ${response.status} ${response.statusText}`);\n        }\n        const html = await response.text();\n        console.log('HTML received, length:', html.length);\n        if (html.length < 1000) {\n            console.warn('Suspiciously short HTML response:', html);\n            return res.status(403).json({\n                message: 'Received an invalid response from the property site. This might be due to rate limiting or bot detection.'\n            });\n        }\n        console.log('First 500 chars of HTML:', html.substring(0, 500));\n        const $ = cheerio__WEBPACK_IMPORTED_MODULE_0__.load(html);\n        const properties = [];\n        // Get first 3 regular listings\n        const listings = $(parser.selector);\n        console.log(`Found ${listings.length} listings with selector \"${parser.selector}\"`);\n        if (listings.length === 0) {\n            // Log a sample of the HTML structure to help debug selector issues\n            console.log('HTML structure sample:');\n            $('body').children().slice(0, 3).each((_, el)=>{\n                console.log($(el).prop('tagName'), $(el).attr('class') || 'no-class');\n            });\n            return res.status(404).json({\n                message: 'No property listings found'\n            });\n        }\n        listings.each((index, element)=>{\n            try {\n                const property = parser.extract($, element);\n                if (property) {\n                    console.log(`Successfully extracted property ${index + 1}:`, {\n                        title: property.title,\n                        price: property.price,\n                        location: property.location,\n                        specs: property.specs\n                    });\n                    properties.push(property);\n                } else {\n                    console.log(`Failed to extract property ${index + 1} - missing required fields`);\n                }\n            } catch (error) {\n                console.error(`Error extracting property ${index + 1}:`, error);\n            }\n            if (properties.length >= 3) return false;\n        });\n        if (properties.length === 0) {\n            console.log('No valid properties found');\n            return res.status(404).json({\n                message: 'No valid property data could be extracted'\n            });\n        }\n        console.log('Returning properties:', properties.length);\n        res.status(200).json(properties);\n    } catch (error) {\n        console.error('Error processing property search:', error);\n        res.status(500).json({\n            message: 'Error processing property search',\n            error: error.message\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./src/pages/api/properties/search-listings.ts\n");

/***/ }),

/***/ "cheerio":
/*!**************************!*\
  !*** external "cheerio" ***!
  \**************************/
/***/ ((module) => {

module.exports = import("cheerio");;

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fproperties%2Fsearch-listings&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fproperties%2Fsearch-listings.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();